{"ast":null,"code":"var _jsxFileName = \"/Users/andrewlin/projects/react-google-books/client/src/pages/SearchPage/index.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport API from \"../../utils/API\";\nimport Nav from \"../../components/Nav\";\nimport Jumbotron from \"../../components/Jumbotron\";\nimport Container from \"../../components/Container\";\nimport Book from \"../../components/Book\";\nimport { BtnSubmit, BtnSave } from \"../../components/Button\";\nimport './style.css';\nconst MAXRESULTS = 10; // import bookNotPictured from \"../../images/bookNotPictured.jpg\"\n// const test = {\n//     authors: [\"Suzanne Collins\"],\n//     description: \"Set in a dark vision of the near future, a terrifying reality TV show is taking place. Twelve boys and twelve girls are forced to appear in a live event called The Hunger Games. There is only one rule: kill or be killed. When sixteen-year-old Katniss Everdeen steps forward to take her younger sister's place in the games, she sees it as a death sentence. But Katniss has been close to death before. For her, survival is second nature.\",\n//     image: \"http://books.google.com/books/content?id=sazytgAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api\",\n//     link: \"http://books.google.com/books?id=sazytgAACAAJ&dq=title:The+Hunger+Games&hl=&source=gbs_api\",\n//     title: \"The Hunger Games\"\n// }\n\nclass SearchPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: '',\n      toResults: false,\n      books: [],\n      results: [],\n      isCollapsed: false,\n      message: ''\n    };\n\n    this.openBookshelf = () => {\n      API.getSavedBooks().then(res => {\n        this.setState({\n          books: res.data\n        });\n        console.log('*** Successfully opened the bookshelf! ***');\n        console.log(this.state.books);\n      }).catch(err => console.log(err));\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        value: event.target.value\n      });\n      console.log(this.state.value);\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        toResults: true\n      });\n      console.log('Input keyword:' + this.state.value);\n      axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + this.state.value + '&maxResults=' + MAXRESULTS).then(res => {\n        if (!res.data.items) {\n          this.setState({\n            results: [],\n            message: \"No Books Found...\"\n          });\n        } else {\n          var validBooks = res.data.items.filter(result => result.id && result.volumeInfo.title && result.volumeInfo.authors && result.volumeInfo.categories && result.volumeInfo.publisher && result.volumeInfo.publishedDate && result.volumeInfo.imageLinks && result.volumeInfo.imageLinks.thumbnail && result.volumeInfo.infoLink && result.volumeInfo.description && result.volumeInfo.previewLink);\n          this.setState({\n            results: validBooks,\n            message: ''\n          });\n        }\n\n        console.log('* Search Results: *');\n        console.log(this.state.results);\n      }).catch(() => this.setState({\n        results: [],\n        message: \"API Call Failed...\"\n      }));\n    };\n\n    this.handleBookSave = id => {\n      //If the book is not saved, save the book:\n      if (!this.checkSave(id)) {\n        alert(\"Saving book to bookshelf……\");\n        const book = this.state.results.find(book => book.id === id);\n        const bookData = {\n          googleId: book.id,\n          title: book.volumeInfo.title,\n          authors: book.volumeInfo.authors,\n          categories: book.volumeInfo.categories,\n          publisher: book.volumeInfo.publisher,\n          publishedDate: book.volumeInfo.publishedDate,\n          image: book.volumeInfo.imageLinks.thumbnail,\n          description: book.volumeInfo.description,\n          link: book.volumeInfo.previewLink\n        };\n        API.saveBook(bookData).then(() => console.log(\"Succeeded!\")).catch(() => alert('Book already exists!'));\n        this.openBookshelf();\n        console.log('Is this book saved?');\n        console.log(this.checkSave(id));\n      } //If the is saved, unsaved the book\n\n    };\n\n    this.checkSave = id => {\n      var tem = false;\n      this.state.books.forEach(book => {\n        if (book.googleId === id) {\n          tem = true;\n        }\n      });\n      return tem;\n    };\n  }\n\n  componentDidMount() {\n    this.openBookshelf();\n  }\n\n  render() {\n    if (!this.state.toResults) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"BOOK SEARCH\"), React.createElement(\"div\", {\n        className: \"input-group mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control title\",\n        placeholder: \"key words in the title\",\n        \"aria-label\": \"Book's Keyword\",\n        \"aria-describedby\": \"button-addon2\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(BtnSubmit, {\n        className: \"btn btn-success search\",\n        type: \"button\",\n        id: \"button-addon2\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"SEARCH\")))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      style: {\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"BOOK SEARCH\"), React.createElement(\"div\", {\n      className: \"input-group mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control title\",\n      placeholder: \"key words in the title\",\n      \"aria-label\": \"Book's Keyword\",\n      \"aria-describedby\": \"button-addon2\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(BtnSubmit, {\n      className: \"btn btn-success search\",\n      type: \"button\",\n      id: \"button-addon2\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"SEARCH\")))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      style: {\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"SEARCH RESULTS\"), this.state.results.map(book => React.createElement(Book, {\n      key: book.id,\n      googleId: book.id,\n      title: book.volumeInfo.title,\n      authors: book.volumeInfo.authors,\n      categories: book.volumeInfo.categories,\n      publisher: book.volumeInfo.publisher,\n      publishedDate: book.volumeInfo.publishedDate,\n      image: book.volumeInfo.imageLinks.thumbnail,\n      description: book.volumeInfo.description,\n      link: book.volumeInfo.previewLink,\n      isCollapsed: this.state.isCollapsed,\n      target: \"_blank\",\n      Buttonaaa: () => React.createElement(BtnSave, {\n        onClick: () => this.handleBookSave(book.id),\n        isSaved: this.checkSave(book.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    })), React.createElement(\"h2\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, this.state.message)));\n  }\n\n}\n\n;\nexport default SearchPage;","map":{"version":3,"sources":["/Users/andrewlin/projects/react-google-books/client/src/pages/SearchPage/index.js"],"names":["React","axios","API","Nav","Jumbotron","Container","Book","BtnSubmit","BtnSave","MAXRESULTS","SearchPage","Component","state","value","toResults","books","results","isCollapsed","message","openBookshelf","getSavedBooks","then","res","setState","data","console","log","catch","err","handleChange","event","target","handleSubmit","preventDefault","get","items","validBooks","filter","result","id","volumeInfo","title","authors","categories","publisher","publishedDate","imageLinks","thumbnail","infoLink","description","previewLink","handleBookSave","checkSave","alert","book","find","bookData","googleId","image","link","saveBook","tem","forEach","componentDidMount","render","fontWeight","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport API from \"../../utils/API\";\nimport Nav from \"../../components/Nav\"\nimport Jumbotron from \"../../components/Jumbotron\"\nimport Container from \"../../components/Container\";\nimport Book from \"../../components/Book\";\nimport {BtnSubmit,BtnSave} from \"../../components/Button\"\nimport './style.css';\n\nconst MAXRESULTS = 10;\n// import bookNotPictured from \"../../images/bookNotPictured.jpg\"\n\n// const test = {\n//     authors: [\"Suzanne Collins\"],\n//     description: \"Set in a dark vision of the near future, a terrifying reality TV show is taking place. Twelve boys and twelve girls are forced to appear in a live event called The Hunger Games. There is only one rule: kill or be killed. When sixteen-year-old Katniss Everdeen steps forward to take her younger sister's place in the games, she sees it as a death sentence. But Katniss has been close to death before. For her, survival is second nature.\",\n//     image: \"http://books.google.com/books/content?id=sazytgAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api\",\n//     link: \"http://books.google.com/books?id=sazytgAACAAJ&dq=title:The+Hunger+Games&hl=&source=gbs_api\",\n//     title: \"The Hunger Games\"\n// }\n\nclass SearchPage extends React.Component {\n    state = {\n        value: '',\n        toResults:false,\n        books:[],\n        results:[],\n        isCollapsed:false,\n        message:''\n    };\n\n    componentDidMount() {\n        this.openBookshelf();\n    }\n\n    openBookshelf = () => {\n        API.getSavedBooks()\n        .then(res => {\n            this.setState({\n                books:res.data,\n            })\n            console.log('*** Successfully opened the bookshelf! ***');\n            console.log(this.state.books);\n        }\n        )\n        .catch((err) => console.log(err))\n    }\n\n    handleChange = event => {\n        this.setState({value: event.target.value});\n        console.log(this.state.value);\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        this.setState({\n            toResults: true\n        })\n        console.log('Input keyword:' + this.state.value);\n\n        axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + this.state.value + '&maxResults=' + MAXRESULTS)\n        .then(res => {\n            if(!res.data.items){\n                this.setState({\n                    results: [],\n                    message: \"No Books Found...\"\n                })\n            }\n            else{\n                var validBooks = res.data.items.filter( result =>\n                    result.id &&\n                    result.volumeInfo.title &&\n                    result.volumeInfo.authors &&\n                    result.volumeInfo.categories &&\n                    result.volumeInfo.publisher &&\n                    result.volumeInfo.publishedDate &&\n                    result.volumeInfo.imageLinks &&\n                    result.volumeInfo.imageLinks.thumbnail &&\n                    result.volumeInfo.infoLink &&\n                    result.volumeInfo.description &&\n                    result.volumeInfo.previewLink\n                )        \n                this.setState({\n                    results: validBooks,\n                    message:''\n                })          \n            }\n            console.log('* Search Results: *');\n            console.log(this.state.results);\n        })\n        .catch(() =>\n            this.setState({\n                results: [],\n                message: \"API Call Failed...\"\n            })\n        );\n    }\n\n    handleBookSave = (id) => {\n        //If the book is not saved, save the book:\n        if(!this.checkSave(id)){\n            alert(\"Saving book to bookshelf……\")\n            const book = this.state.results.find(book => book.id === id);\n            const bookData = {\n                googleId:book.id,\n                title:book.volumeInfo.title,\n                authors:book.volumeInfo.authors,\n                categories:book.volumeInfo.categories,\n                publisher:book.volumeInfo.publisher,\n                publishedDate:book.volumeInfo.publishedDate,\n                image:book.volumeInfo.imageLinks.thumbnail,\n                description:book.volumeInfo.description, \n                link:book.volumeInfo.previewLink\n            };           \n            API.saveBook(bookData)\n            .then(() => console.log(\"Succeeded!\"))\n            .catch(() => alert('Book already exists!'))\n            this.openBookshelf();\n            console.log('Is this book saved?')\n            console.log(this.checkSave(id));\n        }\n\n        //If the is saved, unsaved the book\n\n\n    };\n\n    checkSave = (id) => {\n        var tem = false;\n        this.state.books.forEach(book => {\n            if(book.googleId === id){\n                tem = true;\n            }\n        })\n        return tem;\n    }\n\n    render() {\n        if (!this.state.toResults) {\n            return(\n                <div>\n                    <Nav />\n                    <Jumbotron />\n                    <Container>\n                        <h4 style={{fontWeight:'bold'}}>BOOK SEARCH</h4>\n                        <div className=\"input-group mb-3\">\n                            <input type=\"text\" className=\"form-control title\" placeholder=\"key words in the title\" aria-label=\"Book's Keyword\" aria-describedby=\"button-addon2\" onChange={this.handleChange}></input>\n                            <div className=\"input-group-append\">\n                                <BtnSubmit className=\"btn btn-success search\" type=\"button\" id=\"button-addon2\" onClick={this.handleSubmit} >SEARCH</BtnSubmit>\n                            </div>\n                        </div>\n                    </Container>\n                    <br />\n                </div>\n            )\n            \n        }\n\n        return(\n            <div>\n                <Nav />\n                <Jumbotron />\n                <Container>\n                    <h4 style={{fontWeight:'bold'}}>BOOK SEARCH</h4>\n                    <div className=\"input-group mb-3\">\n                        <input type=\"text\" className=\"form-control title\" placeholder=\"key words in the title\" aria-label=\"Book's Keyword\" aria-describedby=\"button-addon2\" onChange={this.handleChange}></input>\n                        <div className=\"input-group-append\">\n                            <BtnSubmit className=\"btn btn-success search\" type=\"button\" id=\"button-addon2\" onClick={this.handleSubmit} >SEARCH</BtnSubmit>\n                        </div>\n                    </div>\n                </Container>\n                <br />\n                    <Container>\n                    <h4 style={{fontWeight:'bold'}}>SEARCH RESULTS</h4>\n                    {this.state.results.map(book => \n                        <Book \n                        key={book.id} \n                        googleId={book.id} \n                        title={book.volumeInfo.title} \n                        authors={book.volumeInfo.authors}\n                        categories={book.volumeInfo.categories} \n                        publisher={book.volumeInfo.publisher}\n                        publishedDate={book.volumeInfo.publishedDate} \n                        image={book.volumeInfo.imageLinks.thumbnail} \n                        description={book.volumeInfo.description}  \n                        link={book.volumeInfo.previewLink} \n                        isCollapsed={this.state.isCollapsed}\n                        target=\"_blank\"\n                        Buttonaaa={()=>(\n                            <BtnSave onClick={() => this.handleBookSave(book.id)} isSaved = {this.checkSave(book.id)}></BtnSave>\n                        )}\n                        />\n                    )}\n                    <h2 className=\"text-center\">{this.state.message}</h2>\n                    </Container>\n            </div>\n        )\n    }\n};\n\nexport default SearchPage;\n"]},"metadata":{},"sourceType":"module"}