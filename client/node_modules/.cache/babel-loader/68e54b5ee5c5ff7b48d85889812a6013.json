{"ast":null,"code":"var _jsxFileName = \"/Users/andrewlin/projects/react-google-books/client/src/pages/SavedPage/index.js\";\nimport React from \"react\";\nimport Nav from \"../../components/Nav\";\nimport Footer from \"../../components/Footer\";\nimport Container from \"../../components/Container\";\nimport API from \"../../utils/API\";\nimport Book from \"../../components/Book\";\nimport { BtnSave } from \"../../components/Button\";\n\nclass SavedPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      books: [],\n      message: 'You have' + this.state.book.length + ' books in your bookshelf.'\n    };\n\n    this.openBookshelf = () => {\n      API.getSavedBooks().then(res => {\n        console.log(res.data);\n        console.log(this.state.books);\n\n        if (res.data.length > 0) {\n          this.setState({\n            books: res.data,\n            message: ''\n          });\n        } else {\n          this.setState({\n            books: [],\n            message: 'Your book shelf is empty...'\n          });\n        }\n\n        console.log(this.state.books);\n      }).catch(err => console.log(err));\n    };\n\n    this.deleteBook = id => {\n      if (true) {\n        API.deleteBook(id).then(() => {\n          alert(\"Deleting……\");\n          console.log(\"Successfully deleted!\");\n          this.openBookshelf();\n        }).catch(err => console.log(err));\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.openBookshelf();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Container, {\n      header: \"MY BOOKSHELF\",\n      icon: \"bookshelf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.state.message), this.state.books.map(book => React.createElement(Book, {\n      key: book._id,\n      googleId: book.googleId,\n      title: book.title,\n      authors: book.authors,\n      categories: book.categories,\n      publisher: book.publisher,\n      publishedDate: book.publishedDate,\n      image: book.image,\n      description: book.description,\n      link: book.link,\n      target: \"_blank\",\n      Buttonaaa: () => React.createElement(BtnSave, {\n        onClick: () => this.deleteBook(book._id),\n        isSaved: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default SavedPage;","map":{"version":3,"sources":["/Users/andrewlin/projects/react-google-books/client/src/pages/SavedPage/index.js"],"names":["React","Nav","Footer","Container","API","Book","BtnSave","SavedPage","Component","state","books","message","book","length","openBookshelf","getSavedBooks","then","res","console","log","data","setState","catch","err","deleteBook","id","alert","componentDidMount","render","map","_id","googleId","title","authors","categories","publisher","publishedDate","image","description","link"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Nav from \"../../components/Nav\"\nimport Footer from \"../../components/Footer\"\nimport Container from \"../../components/Container\";\nimport API from \"../../utils/API\";\nimport Book from \"../../components/Book\";\nimport {BtnSave} from \"../../components/Button\"\n\n\nclass SavedPage extends React.Component {\n    state = {\n        books:[],\n        message:'You have' + this.state.book.length + ' books in your bookshelf.' \n    }\n\n    componentDidMount() {\n        this.openBookshelf();\n    }\n\n    openBookshelf = () => {\n        API.getSavedBooks()\n        .then(res => {\n            console.log(res.data);\n            console.log(this.state.books);\n            if(res.data.length > 0){\n                this.setState({\n                    books:res.data,\n                    message:''\n                })\n            }\n            else{\n                this.setState({\n                    books:[],\n                    message:'Your book shelf is empty...'\n                })\n            }\n\n            console.log(this.state.books);\n        }\n        )\n        .catch((err) => console.log(err))\n    }\n\n    deleteBook = (id) => {\n        if(true){\n            API.deleteBook(id)\n            .then(() => {\n                alert(\"Deleting……\");\n                console.log(\"Successfully deleted!\")\n                this.openBookshelf();\n                }\n            )\n            .catch((err) => console.log(err))\n\n        }\n    }\n\n    render(){\n        return(\n            <div>\n                <Nav />\n                {/* <Jumbotron /> */}\n                <br />\n                <Container header='MY BOOKSHELF' icon='bookshelf'>\n                <h4 className=\"text-center\">{this.state.message}</h4>\n                {this.state.books.map(book => \n                        <Book \n                        key={book._id} \n                        googleId={book.googleId} \n                        title={book.title} \n                        authors={book.authors}\n                        categories={book.categories} \n                        publisher={book.publisher}\n                        publishedDate={book.publishedDate} \n                        image={book.image} \n                        description={book.description}  \n                        link={book.link} \n                        target=\"_blank\"\n                        Buttonaaa={()=>(\n                            <BtnSave onClick={() => this.deleteBook(book._id)} isSaved = {true}></BtnSave>\n                        )}\n                        />\n                    )}\n                </Container>\n                <br /><br /><br /><br />\n                <Footer />\n            </div>\n        )\n    }\n}\n\nexport default SavedPage;\n"]},"metadata":{},"sourceType":"module"}