{"ast":null,"code":"var _jsxFileName = \"/Users/andrewlin/projects/react-google-books/client/src/pages/SavedPage/index.js\";\nimport React from \"react\";\nimport Nav from \"../../components/Nav\";\nimport Jumbotron from \"../../components/Jumbotron\";\nimport Container from \"../../components/Container\";\nimport API from \"../../utils/API\";\nimport Book from \"../../components/Book\";\nimport { BtnSave } from \"../../components/Button\";\n\nclass SavedPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      books: []\n    };\n\n    this.openBookshelf = () => {\n      API.getSavedBooks().then(res => {\n        console.log(res.data);\n        console.log(this.state.books);\n        this.setState({\n          books: res.data\n        });\n        console.log(this.state.books);\n      }).catch(err => console.log(err));\n    };\n\n    this.checkSave = id => {\n      var tem = false;\n      this.state.books.forEach(book => {\n        if (book.googleId === id) {\n          tem = true;\n        }\n      });\n      return tem;\n    };\n  }\n\n  componentDidMount() {\n    this.openBookshelf();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      style: {\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"SAVED BOOKS\"), this.state.books.map(book => React.createElement(Book, {\n      key: book.googleId,\n      googleId: book.googleId,\n      title: book.title,\n      authors: book.authors,\n      categories: book.categories,\n      publisher: book.publisher,\n      publishedDate: book.publishedDate,\n      image: book.image,\n      description: book.description,\n      link: book.link,\n      target: \"_blank\",\n      Buttonaaa: () => React.createElement(BtnSave, {\n        onClick: () => this.handleBookSave(book.id),\n        isSaved: this.checkSave(book.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default SavedPage;","map":{"version":3,"sources":["/Users/andrewlin/projects/react-google-books/client/src/pages/SavedPage/index.js"],"names":["React","Nav","Jumbotron","Container","API","Book","BtnSave","SavedPage","Component","state","books","openBookshelf","getSavedBooks","then","res","console","log","data","setState","catch","err","checkSave","id","tem","forEach","book","googleId","componentDidMount","render","fontWeight","map","title","authors","categories","publisher","publishedDate","image","description","link","handleBookSave"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Nav from \"../../components/Nav\"\nimport Jumbotron from \"../../components/Jumbotron\"\nimport Container from \"../../components/Container\";\nimport API from \"../../utils/API\";\nimport Book from \"../../components/Book\";\nimport {BtnSave} from \"../../components/Button\"\n\n\nclass SavedPage extends React.Component {\n    state = {\n        books:[]\n    }\n\n    componentDidMount() {\n        this.openBookshelf();\n    }\n\n    openBookshelf = () => {\n        API.getSavedBooks()\n        .then(res => {\n            console.log(res.data);\n            console.log(this.state.books);\n            this.setState({\n                books:res.data,\n            })\n            console.log(this.state.books);\n        }\n        )\n        .catch((err) => console.log(err))\n    }\n\n    checkSave = (id) => {\n        var tem = false;\n        this.state.books.forEach(book => {\n            if(book.googleId === id){\n                tem = true;\n            }\n        })\n        return tem;\n    }\n\n    render(){\n        return(\n            <div>\n                <Nav />\n                <Jumbotron />\n                <Container>\n                <h4 style={{fontWeight:'bold'}}>SAVED BOOKS</h4>\n                {this.state.books.map(book => \n                        <Book \n                        key={book.googleId} \n                        googleId={book.googleId} \n                        title={book.title} \n                        authors={book.authors}\n                        categories={book.categories} \n                        publisher={book.publisher}\n                        publishedDate={book.publishedDate} \n                        image={book.image} \n                        description={book.description}  \n                        link={book.link} \n                        target=\"_blank\"\n                        Buttonaaa={()=>(\n                            <BtnSave onClick={() => this.handleBookSave(book.id)} isSaved = {this.checkSave(book.id)}></BtnSave>\n                        )}\n                        />\n                    )}\n                </Container>\n\n            </div>\n        )\n    }\n}\n\nexport default SavedPage;\n"]},"metadata":{},"sourceType":"module"}