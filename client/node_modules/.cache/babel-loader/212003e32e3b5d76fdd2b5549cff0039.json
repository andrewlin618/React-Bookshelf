{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  // Search books from google books api;\n  getNewBooks: function (req, res) {\n    const params = req.query;\n    axios.get(\"https://www.googleapis.com/books/v1/volumes\", {\n      params\n    }).then(results => results.data.items.filter(result => result.volumeInfo.title && result.volumeInfo.infoLink && result.volumeInfo.authors && result.volumeInfo.description && result.volumeInfo.imageLinks && result.volumeInfo.imageLinks.thumbnail)) // .then(apiBooks =>\n    //     db.Book.find().then(dbBooks =>\n    //       apiBooks.filter(apiBook =>\n    //         dbBooks.every(dbBook => dbBook.googleId.toString() !== apiBook.id)\n    //       )\n    //     )\n    // )\n    .then(books => res.json(books)).catch(err => res.status(422).json(err));\n  },\n  // Get all saved books from the database;\n  getSavedBooks: function () {\n    return axios.get(\"/api/books/\");\n  },\n  // Delete certain book from the database;\n  deleteBook: function (id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Save a new book to the database;\n  saveBook: function (bookData) {\n    return axios.post(\"/api/books\", bookData);\n  }\n};","map":{"version":3,"sources":["/Users/andrewlin/projects/react-google-books/client/src/utils/API.js"],"names":["axios","getNewBooks","req","res","params","query","get","then","results","data","items","filter","result","volumeInfo","title","infoLink","authors","description","imageLinks","thumbnail","books","json","catch","err","status","getSavedBooks","deleteBook","id","delete","saveBook","bookData","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACX;AACAC,EAAAA,WAAW,EAAE,UAASC,GAAT,EAAcC,GAAd,EAAoB;AAAA,UACdC,MADc,GACHF,GADG,CACrBG,KADqB;AAE7BL,IAAAA,KAAK,CACJM,GADD,CACK,6CADL,EACoD;AAACF,MAAAA;AAAD,KADpD,EAECG,IAFD,CAEMC,OAAO,IACTA,OAAO,CAACC,IAAR,CAAaC,KAAb,CAAmBC,MAAnB,CACIC,MAAM,IACFA,MAAM,CAACC,UAAP,CAAkBC,KAAlB,IACAF,MAAM,CAACC,UAAP,CAAkBE,QADlB,IAEAH,MAAM,CAACC,UAAP,CAAkBG,OAFlB,IAGAJ,MAAM,CAACC,UAAP,CAAkBI,WAHlB,IAIAL,MAAM,CAACC,UAAP,CAAkBK,UAJlB,IAKAN,MAAM,CAACC,UAAP,CAAkBK,UAAlB,CAA6BC,SAPrC,CAHJ,EAaA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA,KAoBCZ,IApBD,CAoBMa,KAAK,IAAIjB,GAAG,CAACkB,IAAJ,CAASD,KAAT,CApBf,EAqBCE,KArBD,CAqBOC,GAAG,IAAIpB,GAAG,CAACqB,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqBE,GAArB,CArBd;AAsBH,GA1BU;AA2BX;AACAE,EAAAA,aAAa,EAAE,YAAW;AACtB,WAAOzB,KAAK,CAACM,GAAN,CAAU,aAAV,CAAP;AACH,GA9BU;AA+BX;AACAoB,EAAAA,UAAU,EAAE,UAASC,EAAT,EAAa;AACrB,WAAO3B,KAAK,CAAC4B,MAAN,CAAa,gBAAgBD,EAA7B,CAAP;AACH,GAlCU;AAmCX;AACAE,EAAAA,QAAQ,EAAE,UAASC,QAAT,EAAmB;AACzB,WAAO9B,KAAK,CAAC+B,IAAN,CAAW,YAAX,EAAyBD,QAAzB,CAAP;AACH;AAtCU,CAAf","sourcesContent":["import axios from \"axios\";\n\nexport default {\n    // Search books from google books api;\n    getNewBooks: function(req, res)  {\n        const { query: params } = req;\n        axios\n        .get(\"https://www.googleapis.com/books/v1/volumes\", {params})\n        .then(results =>\n            results.data.items.filter(\n                result =>\n                    result.volumeInfo.title &&\n                    result.volumeInfo.infoLink &&\n                    result.volumeInfo.authors &&\n                    result.volumeInfo.description &&\n                    result.volumeInfo.imageLinks &&\n                    result.volumeInfo.imageLinks.thumbnail\n            )\n        )\n        // .then(apiBooks =>\n        //     db.Book.find().then(dbBooks =>\n        //       apiBooks.filter(apiBook =>\n        //         dbBooks.every(dbBook => dbBook.googleId.toString() !== apiBook.id)\n        //       )\n        //     )\n        // )\n        .then(books => res.json(books))\n        .catch(err => res.status(422).json(err));\n    },\n    // Get all saved books from the database;\n    getSavedBooks: function() {\n        return axios.get(\"/api/books/\");\n    },\n    // Delete certain book from the database;\n    deleteBook: function(id) {\n        return axios.delete(\"/api/books/\" + id);\n    },\n    // Save a new book to the database;\n    saveBook: function(bookData) {\n        return axios.post(\"/api/books\", bookData);\n    }\n};"]},"metadata":{},"sourceType":"module"}