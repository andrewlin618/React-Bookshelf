{"ast":null,"code":"var _jsxFileName = \"/Users/andrewlin/projects/react-google-books/client/src/pages/SavedPage/index.js\";\nimport React from \"react\";\nimport Nav from \"../../components/Nav\"; // import Jumbotron from \"../../components/Jumbotron\"\n\nimport Container from \"../../components/Container\";\nimport API from \"../../utils/API\";\nimport Book from \"../../components/Book\";\nimport { BtnSave } from \"../../components/Button\";\n\nclass SavedPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      books: [],\n      message: 'Your book shelf is empty'\n    };\n\n    this.openBookshelf = () => {\n      API.getSavedBooks().then(res => {\n        console.log(res.data);\n\n        if (res.data) {\n          this.setState({\n            books: res.data,\n            message: ''\n          });\n        }\n\n        console.log(this.state.books);\n      }).catch(err => console.log(err));\n    };\n\n    this.deleteBook = id => {\n      if (true) {\n        API.deleteBook(id).then(() => {\n          console.log(\"Successfully deleted!\");\n          this.openBookshelf();\n        }).catch(() => alert('Book already exists!'));\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.openBookshelf();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      style: {\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"SAVED BOOKS\"), this.state.books.map(book => React.createElement(Book, {\n      key: book._id,\n      googleId: book.googleId,\n      title: book.title,\n      authors: book.authors,\n      categories: book.categories,\n      publisher: book.publisher,\n      publishedDate: book.publishedDate,\n      image: book.image,\n      description: book.description,\n      link: book.link,\n      target: \"_blank\",\n      Buttonaaa: () => React.createElement(BtnSave, {\n        onClick: () => this.deleteBook(book._id),\n        isSaved: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default SavedPage;","map":{"version":3,"sources":["/Users/andrewlin/projects/react-google-books/client/src/pages/SavedPage/index.js"],"names":["React","Nav","Container","API","Book","BtnSave","SavedPage","Component","state","books","message","openBookshelf","getSavedBooks","then","res","console","log","data","setState","catch","err","deleteBook","id","alert","componentDidMount","render","fontWeight","map","book","_id","googleId","title","authors","categories","publisher","publishedDate","image","description","link"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Nav from \"../../components/Nav\"\n// import Jumbotron from \"../../components/Jumbotron\"\n\nimport Container from \"../../components/Container\";\nimport API from \"../../utils/API\";\nimport Book from \"../../components/Book\";\nimport {BtnSave} from \"../../components/Button\"\n\n\nclass SavedPage extends React.Component {\n    state = {\n        books:[],\n        message:'Your book shelf is empty'\n    }\n\n    componentDidMount() {\n        this.openBookshelf();\n    }\n\n    openBookshelf = () => {\n        API.getSavedBooks()\n        .then(res => {\n            console.log(res.data);\n            if(res.data){\n                this.setState({\n                    books:res.data,\n                    message:''\n                })\n            }\n            console.log(this.state.books);\n        }\n        )\n        .catch((err) => console.log(err))\n    }\n\n    deleteBook = (id) => {\n        if(true){\n            API.deleteBook(id)\n            .then(() => {\n                console.log(\"Successfully deleted!\")\n                this.openBookshelf();\n                }\n            )\n            .catch(() => alert('Book already exists!'))\n\n        }\n    }\n\n    render(){\n        return(\n            <div>\n                <Nav />\n                {/* <Jumbotron /> */}\n                <br />\n                <Container>\n                <h4 style={{fontWeight:'bold'}}>SAVED BOOKS</h4>\n                {this.state.books.map(book => \n                        <Book \n                        key={book._id} \n                        googleId={book.googleId} \n                        title={book.title} \n                        authors={book.authors}\n                        categories={book.categories} \n                        publisher={book.publisher}\n                        publishedDate={book.publishedDate} \n                        image={book.image} \n                        description={book.description}  \n                        link={book.link} \n                        target=\"_blank\"\n                        Buttonaaa={()=>(\n                            <BtnSave onClick={() => this.deleteBook(book._id)} isSaved = {true}></BtnSave>\n                        )}\n                        />\n                    )}\n                </Container>\n\n            </div>\n        )\n    }\n}\n\nexport default SavedPage;\n"]},"metadata":{},"sourceType":"module"}