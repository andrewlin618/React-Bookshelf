{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  // Search books from google books api;\n  getNewBooks: function (req, res) {\n    return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + req).then(results => {\n      results.data.items.filter(result => result.volumeInfo.title && result.volumeInfo.infoLink && result.volumeInfo.authors && result.volumeInfo.description && result.volumeInfo.imageLinks && result.volumeInfo.imageLinks.thumbnail);\n    }) // .then(apiBooks =>\n    //     db.Book.find().then(dbBooks =>\n    //       apiBooks.filter(apiBook =>\n    //         dbBooks.every(dbBook => dbBook.googleId.toString() !== apiBook.id)\n    //       )\n    //     )\n    // )\n    .catch(err => res.status(422).json(err));\n  },\n  // Get all saved books from the database;\n  getSavedBooks: function () {\n    return axios.get(\"/api/books/\");\n  },\n  // Delete certain book from the database;\n  deleteBook: function (id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Save a new book to the database;\n  saveBook: function (bookData) {\n    return axios.post(\"/api/books\", bookData);\n  }\n};","map":{"version":3,"sources":["/Users/andrewlin/projects/react-google-books/client/src/utils/API.js"],"names":["axios","getNewBooks","req","res","get","then","results","data","items","filter","result","volumeInfo","title","infoLink","authors","description","imageLinks","thumbnail","catch","err","status","json","getSavedBooks","deleteBook","id","delete","saveBook","bookData","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACX;AACAC,EAAAA,WAAW,EAAE,UAASC,GAAT,EAAcC,GAAd,EAAoB;AAC7B,WAAOH,KAAK,CAACI,GAAN,CAAU,mDAAmDF,GAA7D,EACNG,IADM,CACDC,OAAO,IAAG;AACZA,MAAAA,OAAO,CAACC,IAAR,CAAaC,KAAb,CAAmBC,MAAnB,CACIC,MAAM,IACFA,MAAM,CAACC,UAAP,CAAkBC,KAAlB,IACAF,MAAM,CAACC,UAAP,CAAkBE,QADlB,IAEAH,MAAM,CAACC,UAAP,CAAkBG,OAFlB,IAGAJ,MAAM,CAACC,UAAP,CAAkBI,WAHlB,IAIAL,MAAM,CAACC,UAAP,CAAkBK,UAJlB,IAKAN,MAAM,CAACC,UAAP,CAAkBK,UAAlB,CAA6BC,SAPrC;AASH,KAXM,EAaP;AACA;AACA;AACA;AACA;AACA;AACA;AAnBO,KAoBNC,KApBM,CAoBAC,GAAG,IAAIhB,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,GAArB,CApBP,CAAP;AAqBH,GAxBU;AAyBX;AACAG,EAAAA,aAAa,EAAE,YAAW;AACtB,WAAOtB,KAAK,CAACI,GAAN,CAAU,aAAV,CAAP;AACH,GA5BU;AA6BX;AACAmB,EAAAA,UAAU,EAAE,UAASC,EAAT,EAAa;AACrB,WAAOxB,KAAK,CAACyB,MAAN,CAAa,gBAAgBD,EAA7B,CAAP;AACH,GAhCU;AAiCX;AACAE,EAAAA,QAAQ,EAAE,UAASC,QAAT,EAAmB;AACzB,WAAO3B,KAAK,CAAC4B,IAAN,CAAW,YAAX,EAAyBD,QAAzB,CAAP;AACH;AApCU,CAAf","sourcesContent":["import axios from \"axios\";\n\nexport default {\n    // Search books from google books api;\n    getNewBooks: function(req, res)  {\n        return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + req)\n        .then(results =>{\n            results.data.items.filter(\n                result =>\n                    result.volumeInfo.title &&\n                    result.volumeInfo.infoLink &&\n                    result.volumeInfo.authors &&\n                    result.volumeInfo.description &&\n                    result.volumeInfo.imageLinks &&\n                    result.volumeInfo.imageLinks.thumbnail\n            )\n        }\n        )\n        // .then(apiBooks =>\n        //     db.Book.find().then(dbBooks =>\n        //       apiBooks.filter(apiBook =>\n        //         dbBooks.every(dbBook => dbBook.googleId.toString() !== apiBook.id)\n        //       )\n        //     )\n        // )\n        .catch(err => res.status(422).json(err));\n    },\n    // Get all saved books from the database;\n    getSavedBooks: function() {\n        return axios.get(\"/api/books/\");\n    },\n    // Delete certain book from the database;\n    deleteBook: function(id) {\n        return axios.delete(\"/api/books/\" + id);\n    },\n    // Save a new book to the database;\n    saveBook: function(bookData) {\n        return axios.post(\"/api/books\", bookData);\n    }\n};"]},"metadata":{},"sourceType":"module"}